#!/usr/bin/env python3
"""–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç MCP —Å–µ—Ä–≤–µ—Ä–∞ 1–°.ai."""

import asyncio
from MCP_1copilot.config import get_config
from MCP_1copilot.api_client import OneCApiClient


async def test_api_client():
    """–¢–µ—Å—Ç API –∫–ª–∏–µ–Ω—Ç–∞."""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–ª–∏–µ–Ω—Ç–∞ 1–°.ai...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        config = get_config()
        if not config.onec_ai_token:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω ONEC_AI_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω: export ONEC_AI_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
            return False
        
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:")
        print(f"   - –ë–∞–∑–æ–≤—ã–π URL: {config.base_url}")
        print(f"   - –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {config.ui_language}")
        print(f"   - –¢–∞–π–º–∞—É—Ç: {config.timeout}s")
        
        # –°–æ–∑–¥–∞–µ–º API –∫–ª–∏–µ–Ω—Ç
        async with OneCApiClient(config) as client:
            print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Å–∫—É—Å—Å–∏–∏...")
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Å–∫—É—Å—Å–∏—é
            conversation_id = await client.create_conversation()
            print(f"‚úÖ –î–∏—Å–∫—É—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {conversation_id}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
            print("\nüí¨ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞...")
            test_question = "–ß—Ç–æ —Ç–∞–∫–æ–µ HTTP–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ 1–°?"
            answer = await client.send_message(conversation_id, test_question)
            
            print(f"‚ùì –í–æ–ø—Ä–æ—Å: {test_question}")
            print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω ({len(answer)} —Å–∏–º–≤–æ–ª–æ–≤):")
            print("-" * 50)
            print(answer[:200] + "..." if len(answer) > 200 else answer)
            print("-" * 50)
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
        return False


def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        config = get_config()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP —Å–µ—Ä–≤–µ—Ä–∞ 1–°.ai\n")
    
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not test_config():
        return
    
    print()
    
    # –¢–µ—Å—Ç API –∫–ª–∏–µ–Ω—Ç–∞
    if not await test_api_client():
        return
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –î–ª—è –∑–∞–ø—É—Å–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python -m MCP_1copilot")


if __name__ == "__main__":
    asyncio.run(main()) 